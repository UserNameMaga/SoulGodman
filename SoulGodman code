def func6(arg42, arg43):
    var48 = func7(arg43, arg42)
    var53 = func8(arg43, var48)
    var83 = var56(var48, var53)
    if arg43 < var48:
        var84 = (var83 | arg42 ^ (arg43 + var48)) + (1782316149 + arg43)
    else:
        var84 = arg42 ^ (var48 - 797)
    var85 = var83 - ((var53 ^ -810247001) + arg42 | arg43)
    result = (-758877490 ^ (arg42 | (320021687 - -1789775381))) | -1875214329
    return result
def func11(arg57, arg58):
    var59 = (arg58 ^ (arg57 & arg58)) & arg57
    var60 = -230 | var59
    var61 = ((arg58 & 73) ^ -329) | 367
    var62 = 838063150 ^ (var61 + arg57)
    var63 = arg57 ^ var62 - var61 + arg58
    var64 = arg57 ^ 671 ^ (-750 - -2107098083)
    var65 = (var64 & var59) + var59 ^ var62
    var66 = (var61 - var63) | var64 & var61
    var67 = var65 & -818882485
    var68 = (arg58 | var63 - var61) | var67
    var69 = arg58 | var60 | var63 | var62
    var70 = (var63 + var69) - var62 - arg58
    var71 = var70 ^ var70 & var65 + var63
    if arg58 < arg58:
        var72 = (-573081404 | var68 & -56) | arg58
    else:
        var72 = var67 + arg57
    var73 = (var59 ^ 184) - var61 | var65
    var74 = arg58 ^ var71
    var75 = var70 - var68 + var61 - var60
    var76 = var66 & (var59 ^ arg58) | var61
    var77 = var75 ^ (var74 - var74)
    var78 = 616455119 & var76
    var79 = var59 + (arg57 - var63) ^ arg58
    var80 = var62 | var74
    if arg57 < var80:
        var81 = (var60 + var79) & var80 | -130
    else:
        var81 = arg57 & var69 ^ arg57 + arg58
    var82 = var67 ^ var78
    result = arg58 - ((arg57 + var59) + var59)
    return result
def func10():
    closure = [-3]
    def func9(arg54, arg55):
        closure[0] += func11(arg54, arg55)
        return closure[0]
    func = func9
    return func
var56 = func10()
def func8(arg49, arg50):
    var51 = 0
    for var52 in xrange(3):
        var51 += var51 + arg50 ^ arg50
    return var51
def func7(arg44, arg45):
    var46 = 0
    for var47 in range(31):
        var46 += arg45 ^ (arg44 + var46)
    return var46
def func3(arg20, arg21):
    var25 = func4(arg21, arg20)
    var26 = -246 + -690050853 | 1200621000 + arg20
    var27 = var25 ^ arg21 + var25 + 452
    var28 = arg20 & var27
    var29 = -633 ^ arg21 | var28
    var30 = var26 | var27 + -204 + var25
    var31 = (var29 ^ arg21 - var26) + var29
    var32 = (var29 - var31 + var29) | var30
    var33 = var28 - ((var30 | -302) & var32)
    var34 = ((var28 + var30) | var26) | var25
    var35 = ((arg20 + var29) ^ var29) - arg21
    var36 = var33 | var26
    var37 = var32 + (arg20 & var35) | arg21
    if arg21 < var25:
        var38 = arg21 | var35
    else:
        var38 = var26 - (var29 | var29 - var27)
    var39 = var32 & (var27 - (var28 + var29))
    var40 = ((var32 | arg20) & var32) - var27
    var41 = var27 + var27 & var25 - arg20
    result = var27 ^ ((var33 ^ var34 - var26 - ((var40 ^ (var40 + var39) | arg20) + var40) ^ var33) - var35 - var34)
    return result
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = (var7 + var7) + 760 ^ 442
    if var8 < arg2:
        var9 = ((arg2 & var8) ^ arg1) | 383
    else:
        var9 = var7 ^ ((var8 ^ arg2) + arg2)
    var10 = var7 + 433 - var7 + arg1
    var11 = (574 & (462030492 & arg2)) & arg2
    var12 = var11 - (var10 & 930 & arg2)
    var13 = var12 - var8
    var14 = (var13 ^ var11 & var12) ^ var12
    var15 = var12 ^ arg1
    var16 = -813 + var11
    if var11 < var7:
        var17 = (var12 | var16) | var7 & var12
    else:
        var17 = (var14 & -1717382205 + var10) - var15
    var18 = var10 & -54437363 - var12 - var13
    var19 = var13 ^ var12 + var15 | var13
    result = (-488159200 ^ arg2 ^ var10 & var7) + arg2 & var10 & var7 & var18 | var19
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in range(13):
        var5 += var6 | (arg3 | var6)
    return var5
def func4(arg22, arg23):
    def func5(acc, rest):
        var24 = (-8 + rest) ^ acc
        if acc == 0:
            return var24
        else:
            result = func5(acc - 1, var24)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 1'
    print 'func_number: 3'
    print 'arg_number: 20'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 6'
    print 'arg_number: 42'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func6(x, i)
        print x,
